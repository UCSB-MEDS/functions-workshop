---
theme: minty
format: html
editor_options: 
  chunk_output_type: console
---

### **Write a function to clean data**

I like to write functions to their own scripts saved in an `utils/` directory (or equivalent)

Identify areas of cleaning code that need to be "flexible" (i.e. change depedning on the data frame)
```{r}
mohawk_clean <- mohawk |> # the name of the raw df AND the name of the new df (df_clean)
  select("year", "month", "day", "decimal_time", "Temp_top", "Temp_mid", "Temp_bot") |>
  mutate(site = rep("Mohawk Reef")) |> # the name of the site
  unite(date, year, month, day, sep = "-", remove = FALSE) |> 
  mutate(time = chron::times(as.numeric(decimal_time))) |> 
  unite(date_time, date, time, sep = " ", remove = TRUE) |> 
  mutate(date_time = as.POSIXct(date_time, "%Y-%m-%d %H:%M:%S", tz = "GMT"),
         year = as.factor(year),
         month = as.factor(month),
         day = as.numeric(day)) |>
  mutate(month_name = as.factor(month.name[month])) |>
  replace_with_na(replace = list(Temp_bot = 9999, Temp_top = 9999, Temp_mid = 9999)) |> 
  select("site", "date_time", "year", "month", "day", "month_name", "Temp_bot", "Temp_mid", "Temp_top")
```


First iteration goal: write a function where I can provide a df name to clean
1.  sub hard-coded data frame for function argument
2.  return clean df
```{r}
clean_ocean_temps <- function(raw_df){
 
  temps_clean <- raw_df |> # 1
    select("year", "month", "day", "decimal_time", "Temp_top", "Temp_mid", "Temp_bot") |>
    mutate(site = rep("Mohawk Reef")) |> 
    unite(date, year, month, day, sep = "-", remove = FALSE) |> 
    mutate(time = chron::times(as.numeric(decimal_time))) |> 
    unite(date_time, date, time, sep = " ", remove = TRUE) |> 
    mutate(date_time = as.POSIXct(date_time, "%Y-%m-%d %H:%M:%S", tz = "GMT"),
          year = as.factor(year),
          month = as.factor(month),
          day = as.numeric(day)) |>
    mutate(month_name = as.factor(month.name[month])) |>
    replace_with_na(replace = list(Temp_bot = 9999, Temp_top = 9999, Temp_mid = 9999)) |> 
    select("site", "date_time", "year", "month", "day", "month_name", "Temp_bot", "Temp_mid", "Temp_top")
  
  return(temps_clean) # 2
}
```

Second iteration goal: make sure any dependencies are loaded with function
3.  restart R session, load function, use function. Does it work? Add `require(pkg)`
```{r}
clean_ocean_temps <- function(raw_df){
  
  require(dplyr) # 3
  require(chron)
  require(naniar)
 
  temps_clean <- raw_df |> 
    select("year", "month", "day", "decimal_time", "Temp_top", "Temp_mid", "Temp_bot") |>
    mutate(site = rep("Mohawk Reef")) |> 
    unite(date, year, month, day, sep = "-", remove = FALSE) |> 
    mutate(time = chron::times(as.numeric(decimal_time))) |> 
    unite(date_time, date, time, sep = " ", remove = TRUE) |> 
    mutate(date_time = as.POSIXct(date_time, "%Y-%m-%d %H:%M:%S", tz = "GMT"),
          year = as.factor(year),
          month = as.factor(month),
          day = as.numeric(day)) |>
    mutate(month_name = as.factor(month.name[month])) |>
    replace_with_na(replace = list(Temp_bot = 9999, Temp_top = 9999, Temp_mid = 9999)) |> 
    select("site", "date_time", "year", "month", "day", "month_name", "Temp_bot", "Temp_mid", "Temp_top")
  
  return(temps_clean) 
}
```

Third iteration goal: add `site` column with the appropriate site name
4.  Get site name as a character string from df name and add "Reef" to end (e.g. "Mohawk Reef") - found this [resource](https://statisticsglobe.com/convert-name-of-data-object-to-character-string-in-r )
5.  sub in this character string where we repeat hard-coded site name 
```{r}
clean_ocean_temps <- function(raw_df){
  
  require(dplyr) 
  require(chron)
  require(naniar)
 
  # 4 - get site name as character string from object name (raw_df)
  site_name <- deparse(substitute(raw_df)) 
  site_name <- paste(str_to_title(site_name), "Reef")
    
  temps_clean <- raw_df |> 
    select("year", "month", "day", "decimal_time", "Temp_top", "Temp_mid", "Temp_bot") |>
    mutate(site = rep(site_name)) |> # 5
    unite(date, year, month, day, sep = "-", remove = FALSE) |> 
    mutate(time = chron::times(as.numeric(decimal_time))) |> 
    unite(date_time, date, time, sep = " ", remove = TRUE) |> 
    mutate(date_time = as.POSIXct(date_time, "%Y-%m-%d %H:%M:%S", tz = "GMT"),
          year = as.factor(year),
          month = as.factor(month),
          day = as.numeric(day)) |>
    mutate(month_name = as.factor(month.name[month])) |>
    replace_with_na(replace = list(Temp_bot = 9999, Temp_top = 9999, Temp_mid = 9999)) |> 
    select("site", "date_time", "year", "month", "day", "month_name", "Temp_bot", "Temp_mid", "Temp_top")
  
  return(temps_clean) 
}
```

Fourth iteration goal: allow for uses to specify which temp variables (`Temp_top`, `Temp_mid`, `Temp_bot`) to keep
6. add default argument `include_temps`
```{r}
clean_ocean_temps <- function(raw_df, include_temps = c("Temp_top", "Temp_mid", "Temp_bot")){ # 6
  
  require(dplyr) 
  require(chron)
  require(naniar)
  
  # get site name as character string from object name (raw_df)
  site_name <- deparse(substitute(raw_df)) 
  site_name <- paste(str_to_title(site_name), "Reef")
  
  # 6 - columns to select 
  standard_cols <- c("year", "month", "day", "decimal_time") # cols that are always selected
  all_cols <- append(standard_cols, include_temps) # standard cols + temp cols that the user can choose to include (or not)
  
  temps_clean <- raw_df |> 
    select("year", "month", "day", "decimal_time", "Temp_top", "Temp_mid", "Temp_bot") |>
    mutate(site = rep(site_name)) |> 
    unite(date, year, month, day, sep = "-", remove = FALSE) |> 
    mutate(time = chron::times(as.numeric(decimal_time))) |> 
    unite(date_time, date, time, sep = " ", remove = TRUE) |> 
    mutate(date_time = as.POSIXct(date_time, "%Y-%m-%d %H:%M:%S", tz = "GMT"),
           year = as.factor(year),
           month = as.factor(month),
           day = as.numeric(day)) |>
    mutate(month_name = as.factor(month.name[month])) |>
    replace_with_na(replace = list(Temp_bot = 9999, Temp_top = 9999, Temp_mid = 9999)) |> 
    select("site", "date_time", "year", "month", "day", "month_name", "Temp_bot", "Temp_mid", "Temp_top")
  
  return(temps_clean) 
}
```

